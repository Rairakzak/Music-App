{"version":3,"sources":["componenets/nav.js","componenets/player.js","componenets/song.js","componenets/data.js","componenets/librarySong.js","componenets/libarary.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","libraryStatus","setLibraryStatus","onClick","icon","faMusic","Player","setCurrentSong","currentSong","isPlaying","setSongs","setIsPlaying","audioRef","songInfo","setSongInfo","songs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","className","currentTime","onChange","e","target","value","min","max","duration","type","size","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","chillHop","audio","color","uuidv4","LibrarySong","songSelectHandler","selectedSong","filter","state","Library","App","useRef","useState","data","timeUpdateHandler","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a78c4580.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faMusic} from '@fortawesome/free-solid-svg-icons';\n\nfunction Nav({libraryStatus,setLibraryStatus}) {\n\n    return (\n      <nav>\n        <h1>CHILL-ZILLA</h1>\n        <button onClick={() => setLibraryStatus(!libraryStatus) }\n        ><FontAwesomeIcon icon={faMusic}/> Music List</button>\n      </nav>\n    );\n  }\n  \n  export default Nav;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faPlay,faPause, faAngleLeft, faAngleRight} from '@fortawesome/free-solid-svg-icons';\n\n\nfunction Player({setCurrentSong,currentSong, isPlaying,setSongs, setIsPlaying, audioRef, songInfo, setSongInfo, songs}) {\n    \n    const activeLibraryHandler=(nextPrev)=>{\n         // add active state\n   const newSongs=songs.map((song)=>{\n    if(song.id === nextPrev.id){\n        return{\n          ...song,active:true,\n        }\n      }else{\n        return{\n          ...song,active:false,\n        }\n      }\n      \n  })\n  setSongs(newSongs)\n    }\n    const playHandler=()=>{\n        if(isPlaying){\n            audioRef.current.pause()\n            setIsPlaying(!isPlaying);\n        }else{\n            audioRef.current.play();\n            setIsPlaying(!isPlaying);\n           \n        }\n        \n    }\n \n  \n    const getTime=(time)=>{\n        return(\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n        )\n    }\n    const dragHandler=(e)=>{\n        audioRef.current.currentTime=e.target.value;\n        setSongInfo({...songInfo, currentTime:e.target.value});\n    }\n    const skipTrackHandler= async (direction)=>{\n        let currentIndex=songs.findIndex((song)=> song.id===currentSong.id)\n        if(direction==='skip-forward'){\n         await   setCurrentSong(songs[(currentIndex+1)% songs.length])\n         activeLibraryHandler(songs[(currentIndex+1)% songs.length])\n            }else if(direction==='skip-back'){\n                if((currentIndex-1) % songs.length===-1){\n                 await  setCurrentSong(songs[songs.length-1]);\n                 activeLibraryHandler(songs[songs.length-1])\n                    if(isPlaying) audioRef.current.play();\n     \n                return;\n                }\n                await setCurrentSong(songs[(currentIndex-1)% songs.length]);\n                activeLibraryHandler(songs[(currentIndex-1)% songs.length])\n            }\n            if(isPlaying) audioRef.current.play();\n     \n    }\n    return (\n      <div className=\"player\">\n        <div className=\"time-control\">\n            <p>{getTime(songInfo.currentTime)}</p>\n            <input \n            onChange={dragHandler}\n            min={0} max={songInfo.duration || 0} value={songInfo.currentTime} type=\"range\"/>\n            <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n        </div>\n        <div className=\"player-control\">\n            <FontAwesomeIcon onClick={()=>skipTrackHandler('skip-back')} size=\"2x\" className=\"skip-back\" icon={faAngleLeft}/>\n            <FontAwesomeIcon  size=\"2x\" className=\"play\" onClick={playHandler} icon={isPlaying ? faPause :faPlay}/>\n            <FontAwesomeIcon  onClick={()=>skipTrackHandler('skip-forward')} size=\"2x\" className=\"skip-forward\" icon={faAngleRight}/>\n        </div>\n       \n     \n      </div>\n    );\n  }\n\n  export default Player;","import React from 'react';\n\n\nfunction Song({currentSong}) {\n\n    return (\n      <div className=\"song-container\">\n         <img alt={currentSong.name} src={currentSong.cover} />\n          <h2>{currentSong.name}</h2>\n          <h3>{currentSong.artist}</h3>   \n    \n      </div>\n    );\n  }\n  \n  export default Song;","import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    //ADD MORE HERE\n  ];\n}\n\nexport default chillHop;\n","import React from 'react';\n\n\nfunction LibrarySong({song,songs,setSongs,setCurrentSong,id,audioRef,isPlaying}) {\n    \n  const songSelectHandler= async ()=>{\n    const selectedSong= songs.filter((state)=> state.id === id);\n   await setCurrentSong(selectedSong[0]);\n    // add active state\n    const newSongs=songs.map((song)=>{\n      if(song.id===id){\n        return{\n          ...song,active:true,\n        }\n      }else{\n        return{\n          ...song,active:false,\n        }\n      }\n      \n    });\n    setSongs(newSongs)\n   if(isPlaying) audioRef.current.play();\n     \n  \n  };\n   \n      \n    \n\n    return (\n      <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected':\"\"}`}>\n         <img alt={song.name} src={song.cover}/>\n         \n          <div className=\"song-info\">\n            <h3>{song.name}</h3>\n            <h4>{song.artist}</h4>   \n      \n          </div>\n      </div>\n    );\n  }\n  \n  export default LibrarySong;","import React from 'react';\nimport LibrarySong from \"./librarySong\";\n\nconst Library =({ libraryStatus,setSongs,songs, setCurrentSong,audioRef,isPlaying})=>{\n    return(\n        <div className={`library ${libraryStatus ? 'active' : ''}`}>\n            <h2 className=\"lib-title\">Library</h2>\n            <div className=\"library-songs\">\n            {songs.map((song)=>\n            <LibrarySong \n            id={song.id}\n            key={song.id}\n            songs={songs}\n            audioRef={audioRef}\n            isPlaying={isPlaying}\n            setCurrentSong={setCurrentSong}\n            setSongs={setSongs}\n            song={song}/>)}\n\n            </div>\n        </div>\n    )\n}\nexport default Library;","import React,{useState,useRef} from \"react\";\nimport \"./Styles/app.scss\"\nimport Nav from './componenets/nav'\nimport Player from './componenets/player'\nimport Song from './componenets/song'\nimport data from './componenets/data'\nimport Library from \"./componenets/libarary\"\n// import chillhop from \"./componenets/data\";\nfunction App() {\n  const audioRef= useRef(null);\nconst [songs,setSongs] = useState(data());\nconst [currentSong, setCurrentSong] = useState(songs[0])\nconst [isPlaying, setIsPlaying]= useState(false)\n\nconst[songInfo, setSongInfo]=useState({\n  currentTime:0,\n  duration:0,  \n})\nconst [libraryStatus,setLibraryStatus]=useState(false)\n\nconst timeUpdateHandler=(e)=>{\n  const current=e.target.currentTime;\n  const duration=e.target.duration;\n  setSongInfo({...songInfo, currentTime:current, duration})\n};\nconst songEndHandler= async ()=>{\n  let currentIndex=songs.findIndex((song)=> song.id===currentSong.id)\n   await   setCurrentSong(songs[(currentIndex+1)% songs.length])\n   if(isPlaying) audioRef.current.play();\n}\nreturn (\n    <div className={`app ${libraryStatus ? \"library-active\":\"\" } `}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n      setSongs={setSongs}\n       songs={songs}\n       setCurrentSong={setCurrentSong}\n      setSongInfo={setSongInfo} songInfo={songInfo}\n      audioRef={audioRef} setIsPlaying={setIsPlaying}isPlaying={isPlaying} currentSong={currentSong} />\n      <Library libraryStatus={libraryStatus}  setSongs={setSongs} isPlaying={isPlaying} audioRef={audioRef} songs={songs} setCurrentSong={setCurrentSong}/>\n      <audio \n        onTimeUpdate={timeUpdateHandler} \n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef} \n        onEnded={songEndHandler}\n        src={currentSong.audio}></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}